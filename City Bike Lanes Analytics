-- In this Analysis I quickly run through a CTE funtion and a simple Window Function as I analyze City Bike Lane Data.

-- 1.  Let's say you work as a data analyst for your city, and your boss wants a list of all the bike lanes that have an average safety rating of 4.0 or higher. 
-- She also wants to see the average safety rating for each of those bike lanes, and a label that says "Safe Lane".

WITH Safety_Rating_CTE AS (
SELECT street, AVG(safetyrating) as 'rating'
FROM CityBikeLanes
GROUP BY street)
Select street, rating, 'Safe Lane' as 'Label'
FROM Safety_Rating_CTE
WHERE rating >= 4
GROUP BY street
ORDER BY rating;

-- 2. The city has decided to remove the least safe bike lanes, make improvements on the bike lanes that are already somewhat safe, and leave the most safe bike lanes as-is. 
-- You need to give your boss the list of all the bike lanes, both safety ratings for each lane given by the two technicians, the average safety rating for each lane, and a label with the recommendation as "Remove", "Leave As-Is", or "Improvements Needed".
-- Bike lanes with an average safety rating of 4 or more should be labeled "Leave As-Is".
-- Bike lanes with an average safety rating of less than 2.5 should be labeled as "Remove".
-- All other bike lanes should be labeled as "Improvements Needed".

SELECT street, safetyrating, 
AVG(safetyrating) OVER (PARTITION BY street) as "Average_Safety_Rating",
CASE WHEN AVG(safetyrating) OVER (PARTITION BY street) >=4 THEN "Leave As-Is"
    WHEN AVG(safetyrating) OVER (PARTITION BY street) <2.5 THEN "Remove"
    ELSE "Improvements Needed"
END AS Recommendation
FROM BIT_DB.CityBikeLanes;


